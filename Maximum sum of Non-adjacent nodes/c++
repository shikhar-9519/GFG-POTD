class Solution {
  public:
    // Function to return the maximum sum of non-adjacent nodes.
    int getMaxSum(Node* root) {
        unordered_map<Node*, int> mp;
        return getMax(root, mp);
    }
    
private:
    int getMax(Node* root, unordered_map<Node*, int>& mp) {
        if (root == nullptr) {
            return 0;
        }
        if (mp.find(root) != mp.end()) {
            return mp[root];
        }
        
        int sum = root->data;
        
        if (root->left != nullptr) {
            sum += getMax(root->left->left, mp) + getMax(root->left->right, mp);
        }
        if (root->right != nullptr) {
            sum += getMax(root->right->left, mp) + getMax(root->right->right, mp);
        }
        
        mp[root] = max(sum, getMax(root->left, mp) + getMax(root->right, mp));
        return mp[root];
    }
};