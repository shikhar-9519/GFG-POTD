class Solution {
    int min;
    Stack<Integer> st = new Stack();
    public Solution() {}

    // Add an element to the top of Stack
    public void push(int x) {
        // code here
        if(st.isEmpty()){
            min=x;
        }
        else if(x<=min){
            st.push(min);
            min=x;
        }
        st.push(x);
    }

    // Remove the top element from the Stack
    public void pop() {
        // code here
        if(st.isEmpty())
            return;
        int tmp = st.pop();
        if(tmp == min){
            if(!st.isEmpty()){
                min=st.pop();
            }
        }
    }

    // Returns top element of the Stack
    public int peek() {
        // code here
        if(st.isEmpty())
            return -1;
        return st.peek();
    }

    // Finds minimum element of Stack
    public int getMin() {
        // code here
        if(st.isEmpty())
            return -1;
        return min;
    }
}